name: Build
on:
  workflow_call:
  workflow_dispatch:

defaults:
  run:
    shell: bash -euo pipefail {0}

jobs:
  build:
    name: ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            use-cross: false

          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            use-cross: false

          - os: ubuntu-latest
            target: arm-unknown-linux-gnueabihf
            use-cross: true

          - os: macos-latest
            target: x86_64-apple-darwin
            use-cross: false

          - os: macos-latest
            target: aarch64-apple-darwin
            use-cross: false

          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            use-cross: true

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: ASDF Setup
        uses: asdf-vm/actions/setup@v2

      - name: Cache asdf
        id: asdf-cache
        uses: actions/cache@v3
        with:
          path: ~/.asdf/
          key: ${{ runner.os }}-${{ hashFiles('**/.tool-versions') }}

      - name: ASDF Install
        if: steps.asdf-cache.outputs.cache-hit != 'true'
        uses: asdf-vm/actions/install@v2

      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup Target
        if: ${{ ! matrix.use-cross }}
        run: rustup target add ${{ matrix.target }}

      - name: Cargo Build
        if: ${{ ! matrix.use-cross }}
        run: cargo build --locked --release --target ${{ matrix.target }}

      - name: Setup Cross
        if: matrix.use-cross
        run: |
          cargo install cross --locked
          asdf reshim rust

      - name: Cross Build
        if: matrix.use-cross
        run: cross build --locked --release --target ${{ matrix.target }}

      - name: Compress Binary for Upload
        run: |
          mv target/${{ matrix.target }}/release/ya ya
          tar -czf ya-${{ matrix.target }}.tar.gz ya

      - name: Upload tarball
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: ya-${{ matrix.target }}.tar.gz
